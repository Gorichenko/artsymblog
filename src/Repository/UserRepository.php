<?php

namespace App\Repository;

use App\Entity\User;
use Doctrine\Bundle\DoctrineBundle\Repository\ServiceEntityRepository;
use Doctrine\ORM\EntityRepository;

/**
 * UserRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class UserRepository extends \Doctrine\ORM\EntityRepository
{
    public function isUserExist($email)
    {
        $qb = $this->createQueryBuilder('u')
            ->select(['u.id', 'u.name', 'u.surname', 'u.email', 'u.image'])
            ->where('u.email = :email')
            ->setParameter('email', $email);

        return $qb->getQuery()->getResult();
    }

    public function getUser($email, $password)
    {
        $qb = $this->createQueryBuilder('u')
            ->select(['u.id', 'u.name', 'u.surname', 'u.email', 'u.image'])
            ->where('u.email = :email')
            ->andWhere('u.password = :password' )
            ->setParameters(array('email' => $email, 'password' => $password));

        return $qb->getQuery()->getResult();
    }

    public function getUserSalt($email)
    {
        $qb = $this->createQueryBuilder('u')
            ->select('u.salt')
            ->where('u.email = :email')
            ->setParameter('email', $email);

        return $qb->getQuery()->getResult(\Doctrine\ORM\AbstractQuery::HYDRATE_ARRAY);
    }

    public function getUserById($id)
    {
        $qb = $this->createQueryBuilder('u')
            ->select(['u.id', 'u.name', 'u.surname', 'u.email', 'u.image'])
            ->where('u.id = :id')
            ->setParameter('id', $id);

        return $qb->getQuery()->getResult();
    }

    public function getOnlineUsers($user_id)
    {
        $qb = $this->createQueryBuilder('u')
            ->select(['u.id', 'u.name', 'u.surname', 'u.email', 'u.image', 'u.online' ])
            ->where('u.id != :id')
            ->setParameters(array('id' => $user_id));

        return $qb->getQuery()->getResult();
    }
}
